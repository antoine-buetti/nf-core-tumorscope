/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: TIFF_PREPROCESS {
        publishDir = [
            path: { "${params.outdir}/preprocessing" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: CELLPOSE_SEGMENT {
        ext.diameter = params.diameter
        ext.flow_threshold = params.flow_threshold
        ext.cellprob_threshold = params.cellprob_threshold
        ext.model_type = params.model_type
        ext.gpu = params.gpu
        publishDir = [
            path: { "${params.outdir}/segmentation" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    withName: TRACKING_WITH_TRACKSTRA {
        // GPU support for tracking
        accelerator = { task.ext.accelerator ?: 1 }
        clusterOptions = '--gres=gpu:1'
        
        // Module-specific parameters from global config
        ext.args = ''
        ext.mode = params.tracking_mode
        ext.use_distance = params.use_distance
        ext.max_distance = params.max_distance
        ext.allow_divisions = params.allow_divisions
        ext.model_name = params.model_name
        ext.save_graph = params.save_graph
        
        // Error handling
        errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
        maxRetries = 1
        maxErrors = '-1'

        // Publishing
        publishDir = [
            path: { "${params.outdir}/tracking" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: TRACKING_VISUALIZATION {
        // CPU-only process - no GPU needed for visualization
        
        // Module-specific parameters from global config
        ext.args = ''
        ext.channels_to_display = params.channels_to_display
        ext.primary_channel = params.primary_channel
        ext.analysis_channels = params.analysis_channels
        ext.intensity_scale = params.intensity_scale
        ext.interval = params.animation_interval
        
        // Error handling
        errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
        maxRetries = 1
        maxErrors = '-1'
        
        // Publishing
        publishDir = [
            path: { "${params.outdir}/visualization" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
